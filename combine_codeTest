#!/usr/bin/env python3

import RPi.GPIO as GPIO
import time
import os

TRIG = 11
ECHO = 12

def setup():
    GPIO.setmode(GPIO.BOARD)
    GPIO.setup(TRIG, GPIO.OUT)
    GPIO.setup(ECHO, GPIO.IN)

def distance():
    GPIO.output(TRIG, 0)
    time.sleep(0.000002)

    GPIO.output(TRIG, 1)
    time.sleep(0.00001)
    GPIO.output(TRIG, 0)

    while GPIO.input(ECHO) == 0:
        pass
    time1 = time.time()
    while GPIO.input(ECHO) == 1:
        pass
    time2 = time.time()

    during = time2 - time1
    return during * 340 / 2 * 100

def destroy():
    GPIO.cleanup()

if __name__ == "__main__":
    setup()
    try:
        while True:
            dis = distance()
            print(dis, 'cm')
            if dis <= 1000:  # If distance is less than or equal to 1000cm, trigger code 1.
                os.system(
import RPi.GPIO as GPIO
import time
import os

TRIG = 11
ECHO = 12

def setup():
    GPIO.setmode(GPIO.BOARD)
    GPIO.setup(TRIG, GPIO.OUT)
    GPIO.setup(ECHO, GPIO.IN)

def distance():
    GPIO.output(TRIG, 0)
    time.sleep(0.000002)

    GPIO.output(TRIG, 1)
    time.sleep(0.00001)
    GPIO.output(TRIG, 0)

    while GPIO.input(ECHO) == 0:
        pass
    time1 = time.time()
    while GPIO.input(ECHO) == 1:
        pass
    time2 = time.time()

    during = time2 - time1
    return during * 340 / 2 * 100

def destroy():
    GPIO.cleanup()

if __name__ == "__main__":
    setup()
    try:
        while True:
            dis = distance()
            print(dis, 'cm')
            if dis <= 1000:  # If distance is less than or equal to 1000cm, trigger code 1.
                os.system("python3 code1.py")  # Execute code 1 script.
            time.sleep(0.3)
    except KeyboardInterrupt:
        destroy())  # Replace /path/to/code1.py with the actual path to code1.py.
            time.sleep(0.3)
    except KeyboardInterrupt:
        destroy()

