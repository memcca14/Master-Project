#!/usr/bin/env python3

import RPi.GPIO as GPIO
import time
import active_buzzer.py as active_buzze

TRIG = 11
ECHO = 12

def setup_activebuzz(pin):
	global BuzzerPin
	BuzzerPin = pin
	GPIO.setmode(GPIO.BOARD)       # Numbers GPIOs by physical location
	GPIO.setup(BuzzerPin, GPIO.OUT)
	GPIO.output(BuzzerPin, GPIO.HIGH)

def setup_ultraSonic():
    GPIO.setmode(GPIO.BOARD)
    GPIO.setup(TRIG, GPIO.OUT)
    GPIO.setup(ECHO, GPIO.IN)

def distance():
    GPIO.output(TRIG, 0)
    time.sleep(0.000002)

    GPIO.output(TRIG, 1)
    time.sleep(0.00001)
    GPIO.output(TRIG, 0)

    while GPIO.input(ECHO) == 0:
        a = 0
    time1 = time.time()
    while GPIO.input(ECHO) == 1:
        a = 1
    time2 = time.time()

    during = time2 - time1
    return during * 340 / 2 * 100

def loop():
    while True:
        dis = distance()
        print(dis, 'cm')
        

        if dis < 50:
            active_buzze
            print("Buzzer activated!")

def destroy():
    GPIO.cleanup()

if __name__ == "__main__":
    setup_ultraSonic()
    setup_activebuzz()
    try:
        loop()
    except KeyboardInterrupt:
        destroy()
